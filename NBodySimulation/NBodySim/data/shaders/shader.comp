#version 430 core

layout (local_size_x = 8, local_size_y = 4, local_size_z = 1) in;
layout(rgba32f, binding = 1) uniform image2D posOutput;
layout(rgba32f, binding = 2) uniform image2D posInput;



void main() {
    vec4 value = vec4(1.0, 1.0, 1.0, 1.0);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
    vec4 position = imageLoad(posOutput, texelCoord) + vec4(0.0, 1.0, 0.0, 0.0);

    //vec4 velOut = imageLoad(velOutput, texelCoord);
    //vec4 velIn = imageLoad(velInput, texelCoord);
    //vec4 positionIn = imageLoad(posInput, texelCoord);

    //value.x = float(texelCoord.x)/(gl_NumWorkGroups.x);
    //value.y = float(texelCoord.y)/(gl_NumWorkGroups.y);
  
    imageStore(posInput, texelCoord, position);
}