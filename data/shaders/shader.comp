#version 430 core

layout (local_size_x = 8, local_size_y = 4, local_size_z = 1) in;
layout(rgba32f, binding = 1) uniform image2D posImgInput;              
layout(rgba32f, binding = 2) uniform image2D posImgOutput;              
layout(rgba32f, binding = 3) uniform image2D velImgInput;              
layout(rgba32f, binding = 4) uniform image2D velImgOutput;   

uniform float deltaTime;
uniform vec3 boundingBox;
float G = 0.01;

void main() 
{
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
  
    vec4 velocity = imageLoad(velImgInput, texelCoord);
    vec4 position = imageLoad(posImgInput, texelCoord);
    // change velocity
    vec4 f = vec4(0, 0, 0, 0);

    for(uint i = 0; i < 128; ++i)
    {
        for(uint j = 0; j < 128; ++j)
        {
            ivec2 curTexel = ivec2(i, j);
            vec4 curPos = imageLoad(posImgInput, curTexel);

            vec4 pathVec = curPos - position;
            float dist = max(length(pathVec), 1);
            float invDistCub = 1.0 / (dist * dist * dist);

            pathVec = pathVec * invDistCub;

            f = f + pathVec;
        }
    }

    f = f * G;
    velocity = velocity + f;
    imageStore(velImgOutput, texelCoord, velocity);

    position = position + velocity * deltaTime;  
    if(abs(position.x) > boundingBox.x || abs(position.y) > boundingBox.y || abs(position.z) > boundingBox.z){
        position = vec4(0,0,0,0);
    }
    imageStore(posImgOutput, texelCoord, position);
}