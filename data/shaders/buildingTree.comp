#version 430 core
layout (local_size_x = 8, local_size_y = 4, local_size_z = 1) in;

struct TreeNode_t 
{
	vec4 centerOfMass;
	float totalMass;
	ivec2 children;
	float boundingBoxMetric;
};


layout(std430, binding = 1) buffer posInputBuffer{
    vec3 posInputSSBO[];
};

layout(std430, binding = 3) buffer velInputBuffer
{
    vec4 velInputSSBO[];
};  

layout(std430, binding = 5) buffer mortonCodeBuffer
{
    uint mortonCodesSSBO[];
};

layout(std430, binding = 6) buffer treeNodesBuffer
{
    TreeNode_t treeNodesSSBO[];
};


int sharedPrefixLength(int i, int j)
{
	if(j < 0 || j >= 16384) return -1;
	uint mi = mortonCodesSSBO[i];
	uint mj = mortonCodesSSBO[j];

	if(mi!=mj)
	{
		uint x = mi ^ mj;
		float f = log2(float(x) + 0.5);
		return 32 - int(f);
	}
	else
	{
		int x = i ^ j;
		float f = log2(float(x) + 0.5);
		return 64 - int(f);
	}
}

void main()
{
	ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);
	int i = 128 * texelCoord.x + texelCoord.y;
	int direction = sign(sharedPrefixLength(i, i + 1) - sharedPrefixLength(i, i - 1));
	
	int minPrefixLength =  sharedPrefixLength(i, i - direction);
	int upperBound = 2;

	while(sharedPrefixLength(i, i + upperBound*direction) > minPrefixLength)
	{
		upperBound *= 2;
	}

	int l = 0;
    int t = upperBound/2;

    for(int k = 0; k<16; k++){
        if (sharedPrefixLength(i, i + (l + t) * direction) > minPrefixLength)
		{
            l = l+t;
        }
        if(t==1) break;
        t /= 2;
    }
	 
	int j = i + l * direction;

	int dNode = sharedPrefixLength(i, j);
	int splitPos = 0;
	float ft = float(l)/2.;
    for(int k = 0; k<16; k++){
        t = int(max(1.,ceil(ft)));
        if(sharedPrefixLength(i, i + (splitPos + t) * direction ) > dNode){
            splitPos += t;
        }
        ft /= 2.;
    }
	int biggestLeftChild = i + splitPos * direction + min(0, direction);
}